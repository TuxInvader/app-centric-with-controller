---
- hosts: localhost
  become: true
  gather_facts: yes

  tasks:

  - name: Run tasks for API and App Centric workshops
    block:

    - name: Setup Inventory file (api_automation)
      blockinfile:
        path: /home/ubuntu/ansible/inventory
        block: |
          [remote]
          ctrl1
          nginx1
          nginx2
          unit1
          unit2
          cicd1

    - name: setup hosts
      lineinfile:
        backrefs: yes
        regexp: '(^[0-9\.]+)\s+{{item.name}}.*'
        line: '\1 {{ item.name }} {{ item.alias }} {{ item.alias }}.{{ wsid }}.{{ domain }}'
        path: /etc/hosts
      loop:
        - { name: 'node1', alias: 'nginx1' }
        - { name: 'node2', alias: 'nginx2' }
        - { name: 'node3', alias: 'unit1' }
        - { name: 'node4', alias: 'unit2' }

    when:
    - wstype == "api_automation" or wstype == "app_centric"

  - name: Run tasks for Kubernetes workshop
    block:

    - name: Setup Inventory file (kubernetes)
      blockinfile:
        path: /home/ubuntu/ansible/inventory
        block: |
          [remote]
          ctrl1
          cicd1
          k8s1
          k8s2
          k8s3
          k8s4

    - name: setup hosts
      lineinfile:
        backrefs: yes
        regexp: '(^[0-9\.]+)\s+{{item.name}}.*'
        line: '\1 {{ item.name }} {{ item.alias }} {{ item.alias }}.{{ wsid }}.{{ domain }}'
        path: /etc/hosts
      loop:
        - { name: 'cicd1', alias: 'registry' }
        - { name: 'node1', alias: 'k8s1' }
        - { name: 'node2', alias: 'k8s2' }
        - { name: 'node3', alias: 'k8s3' }
        - { name: 'node4', alias: 'k8s4' }
        
    when:
    - wstype == "kubernetes"

  - name: Run tasks for NGINX 101 workshop
    block:

    - name: Setup Inventory file (NGINX 101)
      blockinfile:
        path: /home/ubuntu/ansible/inventory
        block: |
          [remote]
          cicd1

    - name: setup hosts
      lineinfile:
        backrefs: yes
        regexp: '(^[0-9\.]+)\s+{{item.name}}.*'
        line: '\1 {{ item.name }} {{ item.alias }} {{ item.alias }}.{{ wsid }}.{{ domain }}'
        path: /etc/hosts
      loop:
        - { name: 'cicd1', alias: 'registry' }
        
    when:
    - wstype == "nginx101"

  - name: Setup Docker client for nginx101 and kubernetes shops
    block:

    - name: Remove any OS docker packages
      apt:
        name:
          - docker
          - docker-engine
          - docker.io
          - containerd
          - runc
        state: absent

    - name: Add the Docker Repo Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add the Docker Repo
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable
        state: present
        update_cache: yes

    - name: Install docker cli on gateway
      apt:
        name:
          - docker-ce-cli
        state: latest

    - name: Ensure there's no docker socket
      file:
        path: /var/run/docker.sock
        state: absent

    when:
    - wstype == "kubernetes" or wstype == "nginx101"

  - name: Refresh inventory to ensure new instances exist in inventory
    meta: refresh_inventory

  - name: Restart DNSmasq service
    systemd:
      name: dnsmasq
      state: restarted

- name: Setup the CA
  import_playbook: playbooks/openssl_ca/deploy-ca.yaml

- name: Setup the remote nodes now.
  import_playbook: playbooks/setup_remotes_playbook.yaml

- name: Setup the NGINX gateway for kubernetes ws.
  import_playbook: playbooks/nginx_workshop_gw/setup_k8s.yaml
  when: wstype == "kubernetes"

- name: Setup the NGINX gateway for APP/API ws.
  import_playbook: playbooks/nginx_workshop_gw/setup_app.yaml
  when: wstype == "api_automation" or wstype == "app_centric"

- name: Setup the NGINX gateway for NGINX 101 ws.
  import_playbook: playbooks/nginx_workshop_gw/setup_101.yaml
  when: wstype == "nginx101"

- name: Setup Gitea for NGINX 101
  import_playbook: playbooks/cicd/gitea.yaml
  when: wstype == "nginx101"

- name: Setup Docker for NGINX 101
  import_playbook: playbooks/cicd/docker-registry.yaml
  when: wstype == "nginx101"

