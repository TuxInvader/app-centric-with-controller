openapi: 3.0.0
info:
  version: "1"
  title: F1 Results API
  license:
    name: MIT
servers:
  - url: 'http://ergast.com/api/f1'

paths:

  '/drivers':
    get:
      summary: List all drivers
      operationId: listDrivers
      tags:
        - drivers
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A paged array of drivers
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultDriverList'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create a driver
      operationId: createDrivers
      tags:
        - drivers
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/drivers/{driverId}':
    get:
      summary: Info for a specific driver
      operationId: showDriverById
      tags:
        - drivers
      parameters:
        - name: driverId
          in: path
          required: true
          description: The id of the driver to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultDriver'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/drivers/{driverId}/seasons':
    get:
      summary: A paged array of seasons where driver raced
      operationId: listDriverSeasons
      tags:
        - drivers
      parameters:
        - name: driverId
          in: path
          required: true
          description: The id of the driver to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultDriverSeasonList'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/seasons':
    get:
      summary: A paged array of seasons
      operationId: listSeasons
      tags:
        - seasons
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultSeasonList'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/{seasonYear}':
    get:
      summary: A paged array of races in a season
      operationId: listRaces
      tags:
        - seasons
      parameters:
        - name: seasonYear
          in: path
          description: The year of the season to retrieve
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultRaceList'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/{seasonYear}{raceNumber}':
    get:
      summary: Get details of a specific race in season/race number
      operationId: getRace
      tags:
        - seasons
      parameters:
        - name: seasonYear
          in: path
          description: The year of the season
          schema:
            type: string
          required: true
        - name: raceNumber
          in: path
          description: The race in that season to retrieve
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultRace'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string

    MRData:
      type: object
      properties:
        xmlns:
          type: string
          example: 'http://ergast.com/mrd/1.0'
        series:
          type: string
          example: 'f1'
        limit:
          type: string
          example: '30'
        offset:
          type: string
          example: '0'
        total:
          type: string
          example: '1'

    ResultSeasonList:
      type: object
      properties:
        MRData:
          allOf:
            - $ref: '#/components/schemas/MRData'
            - type: object
              properties:
                SeasonTable:
                  properties:
                    Seasons:
                      type: array
                      items:
                        $ref: '#/components/schemas/Seasons'
                        
    ResultRaceList:
      type: object
      properties:
        MRData:
          allOf:
            - $ref: '#/components/schemas/MRData'
            - type: object
              properties:
                RaceTable:
                  type: object
                  properties:
                    season: 
                      type: string
                      example: "2020"
                    Races:
                      type: array
                      items:
                        $ref: '#/components/schemas/Race'
    ResultRace:
      type: object
      properties:
        MRData:
          allOf:
            - $ref: '#/components/schemas/MRData'
            - type: object
              properties:
                RaceTable:
                  type: object
                  properties:
                    season: 
                      type: string
                      example: "2020"
                    round:
                      type: string
                      example: "1"
                    Races:
                      type: array
                      items:
                        $ref: '#/components/schemas/Race'
                        
    ResultDriverSeasonList:
      type: object
      properties:
        MRData:
          allOf:
            - $ref: '#/components/schemas/MRData'
            - type: object
              properties:
                SeasonTable:
                  properties:
                    driverId:
                      type: string
                      example: hamilton
                    Seasons:
                      type: array
                      items:
                        $ref: '#/components/schemas/Seasons'

    ResultDriverList:
      type: object
      properties:
        MRData:
          allOf:
            - $ref: '#/components/schemas/MRData'
            - type: object
              properties:
                DriverTable:
                  properties:
                    Drivers:
                      type: array
                      items:
                        $ref: '#/components/schemas/Driver'
    
    ResultDriver:
      type: object
      properties:
        MRData:
          allOf:
            - $ref: '#/components/schemas/MRData'
            - type: object
              properties:
                DriverTable:
                  properties:
                    driverId:
                      type: string
                      example: hamilton
                    Drivers:
                      type: array
                      items:
                        $ref: '#/components/schemas/Driver'

    Driver:
      type: object
      required:
        - driverId
        - url
      properties:
        driverId:
          type: string
          example: 'hamilton'
        givenName:
          type: string
          example: 'Lewis'
        familyName:
          type: string
          example: 'Hamilton'
        permanentNumber:
          type: string
          example: '44'
        code:
          type: string
          example: 'HAM'
        url:
          type: string
          example: "http://en.wikipedia.org/wiki/Lewis_Hamilton"

    Seasons:
      type: array
      items:
        $ref: '#/components/schemas/Season'

    Season:
      type: object
      properties:
        season:
          type: string
          example: '2003'
        url:
          type: string
          example: 'http://en.wikipedia.org/wiki/F1_2003'

    Race:
      type: object
      properties:
        season:
          type: string
          example: '2008'
        round:
          type: string
          example: '1'
        url:
          type: string
          example: 'http://en.wikipedia.org/wiki/2008_Australian_Grand_Prix'
        raceName:
          type: string
          example: 'Australian Grand Prix'
        date:
          type: string
          example: '2008-03-16'
        time:
          type: string
          example: '04:30:00Z'
        Circuit:
          allOf:
          - $ref: '#/components/schemas/Circuit'

    Circuit:
      type: object
      properties:
        circuitId:
          type: string
          example: 'albert_park'
        url:
          type: string
          example: 'http://en.wikipedia.org/wiki/Melbourne_Grand_Prix_Circuit'
        circuitName:
          type: string
          example: Albert Park Grand Prix Circuit
        Location:
          type: object
          properties:
            lat:
              type: string
              example: '-37.8497'
            long:
              type: string
              example: '144.968'
            locality:
              type: string
              example: Melbourne
            country:
              type: string
              example: Australia
